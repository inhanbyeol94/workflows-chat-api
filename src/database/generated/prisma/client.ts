
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * 🟢 You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ChannelUsers
 * const channelUsers = await prisma.channelUsers.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-darwin-arm64.dylib.node")
path.join(process.cwd(), "src/database/generated/prisma/libquery_engine-darwin-arm64.dylib.node")

/**
 * Model ChannelUsers
 * 채널에 속한 사용자 (비밀채널인 경우)
 */
export type ChannelUsers = Prisma.ChannelUsersModel
/**
 * Model Channel
 * 채널
 */
export type Channel = Prisma.ChannelModel
/**
 * Model Message
 * 메세지
 */
export type Message = Prisma.MessageModel
/**
 * Model UserCredential
 * 사용자 인증정보
 */
export type UserCredential = Prisma.UserCredentialModel
/**
 * Model User
 * 사용자
 */
export type User = Prisma.UserModel


